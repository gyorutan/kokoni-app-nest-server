// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String?   @unique
  studentId     String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  imageUrl      String?   @default("https://gyorutan-images.s3.ap-northeast-1.amazonaws.com/1704525658693")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// model Post {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   body      String
//   image     String?
//   hits      Int      @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   userId  String   @db.ObjectId
//   likeIds String[] @db.ObjectId

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   Comments Comment[]
// }

// model Comment {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   userId    String   @db.ObjectId
//   postId    String   @db.ObjectId
//   body      String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user  User @relation(fields: [userId], references: [id], onDelete: Cascade)
//   posts Post @relation(fields: [postId], references: [id], onDelete: Cascade)
// }

// model Notification {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   body      String
//   userId    String   @db.ObjectId
//   createdAt DateTime @default(now())

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
// }
